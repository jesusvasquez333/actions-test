name: C++ tests
on: [push, pull_request]
  
jobs:
  cpp-tests:
    name: C++ tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set enviroment
        run: |
          echo "PACKAGE_DIR=$GITHUB_WORKSPACE/packages" >> $GITHUB_ENV
          echo "EPICS_DIR=$PACKAGE_DIR/epics/base-7.0.3" >> $GITHUB_ENV
          
      - name: Create EPICS dir
        run: |
          echo "GITHUB_WORKSPACE = $GITHUB_WORKSPACE"
          echo "PACKAGE_DIR = ${PACKAGE_DIR}"
          echo "EPICS_DIR = ${EPICS_DIR}"
          mkdir -p "${EPICS_DIR}"
          cd "${EPICS_DIR}"
          echo $(pwd -P)
        
      - name: Get branch name
        id: branch_name
        env:
          VAR1: TEST
          BRANCH_NAME: ${{ github.head_ref }}
        shell: bash
        run: |
          echo VAR1 = $VAR1
          echo BRANCH_NAME = $BRANCH_NAME
          echo GITHUB_REF = $GITHUB_REF
          TRAVIS_BRANCH=${BRANCH_NAME:-$(echo ${GITHUB_REF#refs/heads/})}
          echo TRAVIS_BRANCH = $TRAVIS_BRANCH
          echo ::set-output name=branch::"${BRANCH_NAME:-$(echo ${GITHUB_REF#refs/heads/})}"
          
      - name: Read branch name
        run: echo Branch name = ${{ steps.branch_name.outputs.branch }}
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        
      - name: Build docker
        run: docker build -t test_docker .
          
      - name: start docker
        run: |
          docker container run -dti --rm \
            --name test \
            --entrypoint bash \
            test_docker
            
      - name: test docker
        run: |
          docker container ls
          
      - name: Compile
        run: g++ -o test test.cpp
        shell: bash
      - name: upload binary
        uses: actions/upload-artifact@v1
        with:
          name: binary
          path: test
  cpp-tests-2:
    name: C++ test second
    runs-on: ubuntu-latest
    needs: cpp-tests
    steps:
      - name: download binary
        uses: actions/download-artifact@v2
        with:
          name: binary

      - name: Run
        run: chmod +x test && ./test
        shell: bash
  cpp-publish:
    name: C++ publish binary
    runs-on: ubuntu-latest
    needs: cpp-tests-2
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get release tag
        id: get_tag
        run: echo ::set-output name=tag::"${GITHUB_REF#refs/tags/}"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Dockerhub
        uses: docker/login-action@v1
        with:
          username: jesusvasquez333
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push to Dockerhub
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: jesusvasquez333/test-push:${{ steps.get_tag.outputs.tag }}
          build-args: branch=${{ steps.get_tag.outputs.tag }}
